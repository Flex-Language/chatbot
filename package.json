{
  "name": "flex-chatbot",
  "displayName": "Flex ChatBot",
  "description": "AI assistant for the Flex programming language with multilingual syntax support",
  "version": "1.0.0",
  "publisher": "Flex-proagramming-language",
  "author": {
    "name": "mikawi",
    "email": "hassansherif122202@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Flex-Language/chatbot.git"
  },
  "bugs": {
    "url": "https://github.com/Flex-Language/chatbot/issues"
  },
  "homepage": "https://github.com/Flex-Language/chatbot",
  "icon": "assets/webview/images/icon.png",
  "engines": {
    "vscode": "^1.61.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Education",
    "Snippets"
  ],
  "keywords": [
    "flex",
    "programming language",
    "chatbot",
    "assistant",
    "AI",
    "multilingual",
    "code assistance"
  ],
  "activationEvents": [
    "onCommand:flexChatbot.openview",
    "onView:flexChatbot.openview"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "flex-chatbot",
          "title": "Flex Chat Bot",
          "icon": "assets/webview/images/logo_flex.svg"
        }
      ]
    },
    "views": {
      "flex-chatbot": [
        {
          "icon": "assets/webview/images/logo_taijitu.svg",
          "type": "webview",
          "id": "flexChatbot.openview",
          "name": "View",
          "contextualTitle": "View"
        }
      ]
    },
    "commands": [
      {
        "command": "flexChatbot.openview",
        "title": "Open Flex Chat Bot",
        "category": "Flex Chat Bot"
      },
      {
        "command": "flexChatbot.menu.view",
        "category": "Flex Chat Bot",
        "title": "Show in Sidebar",
        "icon": "$(clear-all)"
      },
      {
        "command": "flexChatbot.resetChat",
        "title": "Reset Chat Conversation",
        "category": "Flex Chat Bot",
        "icon": "$(refresh)"
      },
      {
        "command": "flexChatbot.selectModel",
        "title": "Select AI Model",
        "category": "Flex Chat Bot",
        "icon": "$(settings-gear)"
      },
      {
        "command": "flexChatbot.configure",
        "title": "Configure Settings",
        "category": "Flex Chat Bot",
        "icon": "$(gear)"
      },
      {
        "command": "flexChatbot.showLogs",
        "title": "Show Extension Logs",
        "category": "Flex Chat Bot",
        "icon": "$(output)"
      },
      {
        "command": "flexChatbot.datasetInfo",
        "title": "Show Dataset Information",
        "category": "Flex Chat Bot",
        "icon": "$(info)"
      },
      {
        "command": "flexChatbot.debug.dashboard",
        "title": "Show Debug Dashboard",
        "category": "Flex Chat Bot - Debug",
        "icon": "$(bug)"
      },
      {
        "command": "flexChatbot.debug.clearData",
        "title": "Clear Debug Data",
        "category": "Flex Chat Bot - Debug",
        "icon": "$(clear-all)"
      },
      {
        "command": "flexChatbot.dev.dashboard",
        "title": "Show Development Dashboard",
        "category": "Flex Chat Bot - Development",
        "icon": "$(tools)"
      },
      {
        "command": "flexChatbot.dev.runTests",
        "title": "Run All Tests",
        "category": "Flex Chat Bot - Development",
        "icon": "$(test-view-icon)"
      },
      {
        "command": "flexChatbot.dev.exportData",
        "title": "Export Development Data",
        "category": "Flex Chat Bot - Development",
        "icon": "$(export)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "flexChatbot.menu.view",
          "group": "navigation",
          "when": "view == flexChatbot.openview"
        }
      ]
    },
    "configuration": {
      "title": "Flex Chatbot",
      "properties": {
        "flexChatbot.apiKey": {
          "type": "string",
          "default": "",
          "markdownDescription": "OpenRouter API key for accessing AI models. Get your key at [OpenRouter](https://openrouter.ai/keys).",
          "order": 1
        },
        "flexChatbot.model": {
          "type": "string",
          "default": "openai/gpt-4o-mini",
          "markdownDescription": "AI model to use for chat responses. Use the **Flex Chat Bot: Select AI Model** command to choose from available models.\n\n[Browse models on OpenRouter](https://openrouter.ai/models)",
          "order": 2
        },
        "flexChatbot.temperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 2,
          "markdownDescription": "Controls randomness of AI responses:\n- **0-0.3**: More focused and deterministic\n- **0.4-0.7**: Balanced creativity and accuracy  \n- **0.8-2.0**: More creative and varied",
          "order": 3
        },
        "flexChatbot.enableWebSearch": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable web search capability when `[web]` is included in your query. Provides real-time information from search results. **Note:** Currently uses demo API which may be unreliable.",
          "order": 4
        },
        "flexChatbot.maxTokens": {
          "type": "number",
          "default": 4000,
          "minimum": 100,
          "maximum": 32000,
          "markdownDescription": "Maximum number of tokens in AI responses. Higher values allow longer responses but cost more.",
          "order": 5
        },
        "flexChatbot.timeout": {
          "type": "number",
          "default": 30000,
          "minimum": 5000,
          "maximum": 300000,
          "markdownDescription": "Request timeout in milliseconds (5-300 seconds). Increase if you experience timeout errors.",
          "order": 6
        },
        "flexChatbot.debug.enabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable debug mode for detailed logging and performance tracking. Useful for troubleshooting and development.",
          "order": 7
        },
        "flexChatbot.debug.performanceTracking": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Track performance metrics for API calls and operations. Helps identify slow operations.",
          "order": 8
        },
        "flexChatbot.debug.errorReporting": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable automatic error reporting and recovery attempts. Improves debugging experience.",
          "order": 9
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "test:unit": "npm run compile && npm run lint && echo '✅ Unit tests: Compilation and linting passed'",
    "test:integration": "npm run compile && npm run lint && node ./out/test/runTest.js",
    "test:safe": "npm run test:unit",
    "test:force": "npm run compile && npm run lint && echo '⚠️  Force testing - ensure VS Code is closed' && node ./out/test/runTest.js",
    "kill-vscode": "echo 'Attempting to close VS Code instances...' && (killall 'Visual Studio Code' || echo 'VS Code instances may already be closed')"
  },
  "devDependencies": {
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.61.0",
    "@typescript-eslint/eslint-plugin": "^4.31.1",
    "@typescript-eslint/parser": "^4.31.1",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^7.32.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.1",
    "sinon": "^21.0.0",
    "typescript": "^4.4.3"
  },
  "dependencies": {
    "axios": "^1.9.0"
  }
}